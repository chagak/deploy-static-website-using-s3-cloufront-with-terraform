provider "aws" {
  region = "us-east-1"
}

# S3 Bucket Configuration
resource "aws_s3_bucket" "chaganote-static-honey-two" {
  bucket = "chaganote-static-honey-two"
}

# CloudFront Distribution
resource "aws_cloudfront_distribution" "my_distribution" {
  origin {
    domain_name = "${aws_s3_bucket.chaganote-static-honey-two.bucket_regional_domain_name}"
    origin_id   = "S3-chaganote-static-honey-two"

    s3_origin_config {
      origin_access_identity = aws_cloudfront_origin_access_identity.origin_access_identity.cloudfront_access_identity_path
    }
  }

  enabled             = true
  is_ipv6_enabled      = true
  comment              = "CloudFront distribution for chaganote-static-honey-two"
  default_root_object  = "index.html"

  default_cache_behavior {
    allowed_methods  = ["GET", "HEAD"]
    cached_methods   = ["GET", "HEAD"]
    target_origin_id = "S3-chaganote-static-honey-two"

    forwarded_values {
      query_string = false
      cookies {
        forward = "none"
      }
    }

    viewer_protocol_policy = "redirect-to-https"
  }

  restrictions {
    geo_restriction {
      restriction_type = "none"
    }
  }

  viewer_certificate {
    cloudfront_default_certificate = true
  }
}

# CloudFront Origin Access Identity
resource "aws_cloudfront_origin_access_identity" "origin_access_identity" {
  comment = "OAI for chaganote-static-honey-two"
}

# S3 Bucket Policy to Allow CloudFront Access
resource "aws_s3_bucket_policy" "s3_bucket_policy" {
  bucket = aws_s3_bucket.chaganote-static-honey-two.id

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Effect = "Allow"
        Principal = {
          AWS = aws_cloudfront_origin_access_identity.origin_access_identity.iam_arn
        }
        Action = "s3:GetObject"
        Resource = "${aws_s3_bucket.chaganote-static-honey-two.arn}/*"
      }
    ]
  })
}


